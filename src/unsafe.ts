
export type {
  AddNumbers,
  AddUnsignedFloats,
  AddUnsignedInts,
  AdditionTable,
} from "./Arithmetic/Addition";
export type {
  SubtractNumbers,
  SubtractUnsignedFloats,
  SubtractUnsignedInts,
  SubtractSignedInts,
} from "./Arithmetic/Subtraction";
export type { MultiplySignedFloats } from "./Arithmetic/Multiplication";
export type {
  DivideSignedFloats,
  DivideUnsignedInts,
  DivideUnsignedIntsAsInt,
  DivideSignedInts,
  DivideSignedIntsAsInt,
} from "./Arithmetic/Division";
export type {
  CompareMagnitudes,
  CompareIntMagnitudes,
  CompareFloatMagnitudes,
  Digit,
  DigitsPair,
  OrderedDigits,
  HeadDigitArray,
  TailDigitArray,
  SignedInt,
  IsIntPositive,
  IsIntNegative,
  NegateSignedInt,
  DigitwiseAdditiveOp,
  SplitIntoDigits,
  UnsignedFloat,
  SignedFloat,
  SignedFloatZero,
  MakeSignedFloat,
  MakeUnsignedFloat,
  DigitsToUnsignedFloat,
  SafeDigitsToUnsignedFloat,
  NegateSignedFloat,
  FloatDigitCount,
  FloatMaxDigitsAsUnsignedFloat,
  DivideMaxDigits,
  FloatMaxDigits,
  IsFloatPositive,
  IsFloatNegative,
  SignedFloatOne,
  SignedFloatFromInt,
  SignedFloatFromSignedInt,
  Normalise,
  NormaliseIntZeros,
  NormaliseIntPartLengths,
  IsIntEven,
  IsUnsignedFloatEven,
  IsSignedFloatEven,
  IsSignedIntEven,
} from "./Arithmetic/Digit";
export type {
  Sign,
  SignDecisionBranch,
  FlipSign,
  MultiplySigns,
  Negate,
  IsPositive,
  IsNegative,
  IsSignPositive,
  IsSignNegative,
  Abs,
  SplitAndNormalise,
  SignedFloatToNum,
  RoundFloat,
  Compare,
  _Compare,
  CompareMap,
  CompareDecisionBranch,
  IsOdd,
  IsEven,
  ToUnsignedFloat,
  ToSignedFloat,
  ToSignedInt,
  IsInt,
  IsNotInt,
  Gt,
  Lt,
  Eq,
  GtOrEq,
  LtOrEq,
  Max,
  Min,
} from "./Arithmetic/Number";
export type { BitMap, FlipBits } from "./Arithmetic/Bit";
